#!/bin/sh

umask 022

config_dir=/usr/lib/crypto-profiles/profiles
base_dir=/etc/crypto-profiles
backend_config_dir=$base_dir/back-ends
errcode=0

mkdir -p $backend_config_dir >/dev/null 2>&1

gnutls_config_file=$backend_config_dir/gnutls.config
openssl_config_file=$backend_config_dir/openssl.config
nss_config_file=$backend_config_dir/nss.config

profile=`cat /etc/crypto-profiles/config`

if test -z "$profile";then
	#try the OS-installed profile
	profile=`cat /usr/lib/crypto-profiles/default-config`
	if test -z "$profile";then
		echo "Couldn't read current profile"
		exit 1
	fi
fi

# Note that as default policies are updated to reflect advances
# in crypto, the old policies should be renamed to NAME-F?? to
# allow new systems to interoperate with old ones, by using a
# profile that is acceptable in the old system (F?? is the fedora
# release that used that same profile as default).

# Overall, key exchange methods that offer forward secrecy are 
# preferred, but for compatibility reasons, the TLS RSA is prioritized
# over DHE-RSA.

if ! test -f $config_dir/$profile.settings;then
	echo "Unknown profile: $profile"
	exit 1
fi

. $config_dir/$profile.settings

# Generate policy for GnuTLS
touch $gnutls_config_file.tmp >/dev/null 2>&1
if ! test -f $gnutls_config_file.tmp;then
	echo "Cannot write to $backend_config_dir. This program requires administrator permissions."
	exit 1
fi
echo $CONFIG_GNUTLS > $gnutls_config_file.tmp

# Test policies
gnutls-cli -l --priority `cat $gnutls_config_file.tmp|sed 's/SYSTEM=//g'` >/dev/null 2>&1
if test $? != 0;then
	echo "Couldn't update policy for GnuTLS"
	echo "There is an error in $gnutls_config_file"
else
	mv $gnutls_config_file.tmp $gnutls_config_file
	errcode=1
fi


# Generate policy for openssl
touch $openssl_config_file.tmp >/dev/null 2>&1
if ! test -f $openssl_config_file.tmp;then
	echo "Cannot write to $backend_config_dir. This program requires administrator permissions."
	exit 1
fi
echo $CONFIG_OPENSSL > $openssl_config_file.tmp 2>&1

# Test policies
openssl ciphers `cat $openssl_config_file.tmp` >/dev/null 2>&1
if test $? != 0;then
	echo "Couldn't update policy for OpenSSL"
	echo "There is an error in $openssl_config_file.tmp"
else
	mv $openssl_config_file.tmp $openssl_config_file
	errcode=1
fi

exit $errcode
